<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c26979c1-2845-48c0-867f-5da412fe9af6" name="Changes" comment="more parsing">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkgs/musicxml/deserializer.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkgs/musicxml/deserializer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkgs/musicxml/score_partwise.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkgs/musicxml/score_partwise.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.21.2" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="5cb6babd9f8d7234f7cd7222b85f116bf8ca33c2" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2XoQDOpZNla4k7df3otcDSQkjP9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "DefaultGoTemplateProperty": "Go Application",
    "Docker.Docker compose.executor": "Run",
    "Docker.Start docker.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Go Build.go build score main.go.executor": "Run",
    "Go Build.go build score/backend/cmd/musicxml_processor.executor": "Debug",
    "Go Build.indexer.executor": "Run",
    "Go Build.run cli.executor": "Debug",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "dart.analysis.tool.window.visible": "false",
    "git-widget-placeholder": "golang-muxicxml",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/home/wim/source/repos/score/backend/test",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/backend/test" />
      <recent name="$PROJECT_DIR$/backend/test/data/musicxml" />
      <recent name="$PROJECT_DIR$/backend/pkgs/musicxml" />
      <recent name="$PROJECT_DIR$/backend/test/data" />
      <recent name="$PROJECT_DIR$/backend/internal/grpc" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/backend/pkgs" />
      <recent name="$PROJECT_DIR$/backend/internal" />
      <recent name="$PROJECT_DIR$/backend/pkgs/musicxml" />
      <recent name="$PROJECT_DIR$/backend/pkgs/score" />
      <recent name="$PROJECT_DIR$/backend/test/data/musicxml" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="docker-deploy" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build score/backend/cmd/musicxml_processor">
    <configuration name="go build score/backend/cmd/musicxml_processor" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="score" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="score/backend/cmd/musicxml_processor" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/backend/cmd/musicxml_processor/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="Start docker" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Start docker" />
      <item itemvalue="Go Build.indexer" />
      <item itemvalue="Go Build.go build score/backend/cmd/musicxml_processor" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build score/backend/cmd/musicxml_processor" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-2946fb9b3188-155fe4b6e3a0-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.15026.17" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="parsing stuff" />
    <MESSAGE value="parsing stuff first works" />
    <MESSAGE value="more parsing..." />
    <MESSAGE value="all initial elements are parsed (i think)" />
    <MESSAGE value="cleanup + logging" />
    <MESSAGE value="parsing" />
    <MESSAGE value="zincsearch docker compose" />
    <MESSAGE value="index score works" />
    <MESSAGE value="feat: created indexer" />
    <MESSAGE value="added server" />
    <MESSAGE value="git stuff" />
    <MESSAGE value="git stuff works" />
    <MESSAGE value="indexing works" />
    <MESSAGE value="cleanup + fixes" />
    <MESSAGE value="env var config" />
    <MESSAGE value="use separate models for indexing" />
    <MESSAGE value="more parsing" />
    <option name="LAST_COMMIT_MESSAGE" value="more parsing" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>